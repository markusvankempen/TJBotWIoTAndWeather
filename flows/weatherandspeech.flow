[{"id":"9ee53d75.2a7c9","type":"inject","z":"19b8c358.79a39d","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":131.11111450195312,"y":239.44442749023438,"wires":[["b319488c.f5547"]]},{"id":"f9d24014.5fbc4","type":"debug","z":"19b8c358.79a39d","name":"","active":true,"console":"false","complete":"true","x":535,"y":111.25,"wires":[]},{"id":"b319488c.f5547","type":"weather_insights","z":"19b8c358.79a39d","name":"GetWeatherToronto","service":"/observations.json","geocode":"43.7182412,-79.378058","units":"m","language":"","x":343.3333435058594,"y":243.0833282470703,"wires":[["f9d24014.5fbc4","4500f9b2.037e5"]]},{"id":"b4f98f3b.908ed8","type":"switch","z":"19b8c358.79a39d","name":"TempCheck","property":"payload","propertyType":"msg","rules":[{"t":"lt","v":"5","vt":"num"},{"t":"gt","v":"10","vt":"num"},{"t":"gt","v":"20","vt":"str"},{"t":"else"}],"checkall":"true","outputs":4,"x":573,"y":235.5,"wires":[["b597842a.a5d3a"],["b319372d.9beca"],["42f911c4.a72a7","afee60c2.b223a8"],[]]},{"id":"4500f9b2.037e5","type":"function","z":"19b8c358.79a39d","name":"feels_like","func":"\nmvk = msg.observation.feels_like;\nmsg.payload = mvk;\nglobal.set(\"outsidetemp\",mvk);\n\nreturn msg;","outputs":1,"noerr":0,"x":566.5,"y":168.75,"wires":[["7ae88f7a.8c61d8","b4f98f3b.908ed8"]]},{"id":"7ae88f7a.8c61d8","type":"debug","z":"19b8c358.79a39d","name":"","active":true,"console":"false","complete":"payload","x":727.5,"y":108.75,"wires":[]},{"id":"4e349d3a.71dd24","type":"weather_insights","z":"19b8c358.79a39d","name":"GetWeatherSydneyAus","service":"/observations.json","geocode":"-33.84829,150.9319631","units":"m","language":"","x":360.5,"y":174.75,"wires":[["4500f9b2.037e5","f9d24014.5fbc4"]]},{"id":"e599cfef.16e53","type":"inject","z":"19b8c358.79a39d","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":161.5,"y":171.75,"wires":[["4e349d3a.71dd24"]]},{"id":"b319372d.9beca","type":"function","z":"19b8c358.79a39d","name":"SetColorGreen-Ok","func":"\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 999) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nmsg = {\n  payload: \n    {\n      d:{\n        \"action\" : \"ledGREEN\", \n             \"counter\" : counter1\n        // not use old for testing\n  // //   \"increment\": 0,\n       // \"interval\": 250,\n    //    \"stopat\": 1501,\n      //  \"motorSpin\": 1800,\n        //\"turn\" : 500,\n//        \"temp\" : temp1[counter1],\n  //      \"humidity\" : humidity1[counter1],\n    //    \"location\" :\n      //  {\n        //  \"longitude\" : longitude1,\n         // \"latitude\" : latitude1\n    //    },\n      }\n    }\n  \n};\nmsg.eventOrCommandType = \"ledGREEN\";\nreturn msg;\n","outputs":1,"noerr":0,"x":788,"y":338,"wires":[["d68a187b.8a1bc8"]]},{"id":"b597842a.a5d3a","type":"function","z":"19b8c358.79a39d","name":"SetColorBlue-Cold","func":"\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 999) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nvar msg = {\n  payload: \n    {\n      d:{\n        \"action\" : \"ledBLUE\", \n       \"counter\" : counter1\n      }\n    }\n  \n};\nmsg.eventOrCommandType = \"ledBLUE\";\nreturn msg;\n","outputs":1,"noerr":0,"x":786,"y":301,"wires":[["d68a187b.8a1bc8"]]},{"id":"d68a187b.8a1bc8","type":"ibmiot out","z":"19b8c358.79a39d","authentication":"boundService","apiKey":"","outputType":"cmd","deviceId":"tjbot","deviceType":"tjbot","eventCommandType":"turnRight","format":"json","data":"temp:10","qos":"","name":"Send CMD to TJBot","service":"registered","x":1145.6112060546875,"y":298.77777099609375,"wires":[]},{"id":"42f911c4.a72a7","type":"function","z":"19b8c358.79a39d","name":"SetColorRed-Hot","func":"\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 999) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nmsg = {\n  payload: \n    {\n      d:{\n        \"action\" : \"ledRED\", \n             \"counter\" : counter1\n        // not use old for testing\n  // //   \"increment\": 0,\n       // \"interval\": 250,\n    //    \"stopat\": 1501,\n      //  \"motorSpin\": 1800,\n        //\"turn\" : 500,\n//        \"temp\" : temp1[counter1],\n  //      \"humidity\" : humidity1[counter1],\n    //    \"location\" :\n      //  {\n        //  \"longitude\" : longitude1,\n         // \"latitude\" : latitude1\n    //    },\n      }\n    }\n  \n};\nmsg.eventOrCommandType = \"ledRED\";\nreturn msg;\n","outputs":1,"noerr":0,"x":786,"y":379,"wires":[["d68a187b.8a1bc8"]]},{"id":"afee60c2.b223a8","type":"function","z":"19b8c358.79a39d","name":"tjSpeak","func":"\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 999) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nmsg = {\n  payload: \n    {\n      d:{\n          \"action\" : \"tjSPEAK\",  \n          \"counter\" : counter1,\n          \"words\": \"Oh,it is hot ousite, feels like \"+ msg.observation.feels_like + \" Celsius\"\n      }\n    }\n  \n};\nmsg.eventOrCommandType = \"tjSPEAK\";\nreturn msg;\n","outputs":1,"noerr":0,"x":770.0001220703125,"y":236.6666259765625,"wires":[["d68a187b.8a1bc8"]]}]
